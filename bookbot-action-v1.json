{
  "name": "BookBot-action",
  "type": "action",
  "counts": {
    "actions": 5,
    "intents": 2,
    "entities": 5,
    "data_types": 2,
    "collections": 0,
    "global_variables": 0
  },
  "status": "Available",
  "language": "en",
  "skill_id": "5b0a7951-2b8a-4c95-b74b-c23e420a7383",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "type": "standard",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "type": "standard",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1",
                "ignore_end_action_steps": false
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_16419",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_628",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"What kind of books do you like? Please choose a genre.\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_data_type",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "data_type": "data-type_2720",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_628",
            "next_step": "step_467"
          },
          {
            "step": "step_467",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"Great! If you like Fiction, I recommend *To Kill a Mockingbird* by Harper Lee.\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_467",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Fiction",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_603"
          },
          {
            "step": "step_603",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "*\"If you enjoy Mystery, I recommend The Girl with the Dragon Tattoo by Stieg Larsson.\"*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_603",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Mystery",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_590"
          },
          {
            "step": "step_590",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"If you prefer Self-help, I suggest *The Power of Habit* by Charles Duhigg.\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_590",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Self-help",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_272"
          },
          {
            "step": "step_272",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"If you like Science Fiction, I recommend *Dune* by Frank Herbert.\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_272",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Science Fiction",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_568"
          },
          {
            "step": "step_568",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"If you prefer Biographies, *The Diary of a Young Girl* by Anne Frank is a must-read.\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_568",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Biography",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_986"
          },
          {
            "step": "step_986",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "For Fantasy lovers, **Harry Potter and the Sorcerer's Stone by J.K. Rowling** is a great pick."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_986",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Fantasy",
                  "from_entity": "entity_22068"
                }
              ]
            },
            "next_step": "step_864"
          },
          {
            "step": "step_864",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "If you enjoy Romance, try **Pride and Prejudice by Jane Austen.**"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_864",
            "condition": {
              "eq": [
                {
                  "variable": "step_628"
                },
                {
                  "value": "Romance",
                  "from_entity": "entity_22068"
                }
              ]
            }
          }
        ],
        "title": "Book recommendation",
        "action": "action_16419",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_16419_intent_46082"
        },
        "variables": [
          {
            "title": "\"If you like Science Fiction, I recommend *Dune* by Frank Herber",
            "privacy": {
              "enabled": false
            },
            "variable": "step_272",
            "data_type": "any"
          },
          {
            "title": "\"Great! If you like Fiction, I recommend *To Kill a Mockingbird*",
            "privacy": {
              "enabled": false
            },
            "variable": "step_467",
            "data_type": "any"
          },
          {
            "title": "\"If you prefer Biographies, *The Diary of a Young Girl* by Anne ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_568",
            "data_type": "any"
          },
          {
            "title": "\"If you prefer Self-help, I suggest *The Power of Habit* by Char",
            "privacy": {
              "enabled": false
            },
            "variable": "step_590",
            "data_type": "any"
          },
          {
            "title": "*\"If you enjoy Mystery, I recommend The Girl with the Dragon Tat",
            "privacy": {
              "enabled": false
            },
            "variable": "step_603",
            "data_type": "any"
          },
          {
            "title": "\"What kind of books do you like? Please choose a genre.\"",
            "privacy": {
              "enabled": false
            },
            "variable": "step_628",
            "data_type": "any"
          },
          {
            "title": "If you enjoy Romance, try **Pride and Prejudice by Jane Austen.*",
            "privacy": {
              "enabled": false
            },
            "variable": "step_864",
            "data_type": "any"
          },
          {
            "title": "For Fantasy lovers, **Harry Potter and the Sorcerer's Stone by J",
            "privacy": {
              "enabled": false
            },
            "variable": "step_986",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "action_16419_intent_46082",
        "examples": [
          {
            "text": "Book recommendation"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Call agent"
          },
          {
            "text": "Agent help"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "entity_22068",
        "values": [
          {
            "type": "synonyms",
            "value": "Romance",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Fiction",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Mystery",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Self-help",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Science Fiction",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Biography",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Fantasy",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      },
      {
        "entity": "entity_3290",
        "values": [
          {
            "type": "synonyms",
            "value": "Fiction",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Mystery",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Self-help",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 5,
          "intents": 2,
          "entities": 5,
          "data_types": 2,
          "collections": 0,
          "global_variables": 0
        }
      }
    },
    "variables": [],
    "data_types": [
      {
        "title": "Book genre",
        "entity": "entity_22068",
        "response": {
          "options": [
            {
              "label": "Fiction",
              "value": {
                "input": {
                  "text": "Fiction"
                }
              }
            },
            {
              "label": "Mystery",
              "value": {
                "input": {
                  "text": "Mystery"
                }
              }
            },
            {
              "label": "Self-help",
              "value": {
                "input": {
                  "text": "Self-help"
                }
              }
            },
            {
              "label": "Science Fiction",
              "value": {
                "input": {
                  "text": "Science Fiction"
                }
              }
            },
            {
              "label": "Biography",
              "value": {
                "input": {
                  "text": "Biography"
                }
              }
            },
            {
              "label": "Fantasy",
              "value": {
                "input": {
                  "text": "Fantasy"
                }
              }
            },
            {
              "label": "Romance",
              "value": {
                "input": {
                  "text": "Romance"
                }
              }
            }
          ],
          "response_type": "option"
        },
        "data_type": "data-type_2720"
      },
      {
        "title": "Book genre",
        "entity": "entity_3290",
        "response": {
          "options": [
            {
              "label": "Fiction",
              "value": {
                "input": {
                  "text": "Fiction"
                }
              }
            },
            {
              "label": "Mystery",
              "value": {
                "input": {
                  "text": "Mystery"
                }
              }
            },
            {
              "label": "Self-help",
              "value": {
                "input": {
                  "text": "Self-help"
                }
              }
            }
          ],
          "response_type": "option"
        },
        "data_type": "data-type_4987"
      }
    ],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "hap_filter": {
          "output": {
            "enabled": true
          }
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant ab8967ed-d8b5-4976-9163-fd64b67b7acc",
  "dialog_settings": {
    "source_assistant": "ea7f1c91-e4c9-4ff5-b257-b78901b679e1"
  },
  "created": "2025-08-02T17:14:04.890Z",
  "updated": "2025-08-02T17:14:04.890Z",
  "snapshot": "1",
  "assistant_id": "ab8967ed-d8b5-4976-9163-fd64b67b7acc",
  "assistant_references": [
    {
      "name": "BookBot",
      "assistant_id": "ea7f1c91-e4c9-4ff5-b257-b78901b679e1",
      "skill_reference": "actions skill"
    }
  ]
}